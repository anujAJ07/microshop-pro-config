# Final, Correct Configuration for API Gateway
server.port=8080

# === Eureka Configuration ===
eureka.instance.ip-address=127.0.0.1
eureka.instance.hostname=${eureka.instance.ip-address}
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# === JWT Secret Key ===
jwt.secret=4D6251655468576D5A7134743777217A25432A462D4A614E645267556B587032

# --- Routing Rules ---
# Rule 1: Route requests for the Product Service
spring.cloud.gateway.server.webflux.routes[0].id=product-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://product-service
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/products/**
spring.cloud.gateway.server.webflux.routes[0].filters[0]=AuthenticationFilter

# Rule 2: Route requests for the Order Service
spring.cloud.gateway.server.webflux.routes[1].id=order-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://order-service
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/orders/**
spring.cloud.gateway.server.webflux.routes[1].filters[0]=AuthenticationFilter

# Rule 3: Route requests for the Auth Service (PUBLIC - NO FILTER)
spring.cloud.gateway.server.webflux.routes[2].id=auth-service
spring.cloud.gateway.server.webflux.routes[2].uri=lb://auth-server
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/v1/auth/**

# Rule 4: Route requests for the Inventory Service
spring.cloud.gateway.server.webflux.routes[3].id=inventory-service
spring.cloud.gateway.server.webflux.routes[3].uri=lb://inventory-service
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/inventory/**
spring.cloud.gateway.server.webflux.routes[3].filters[0]=AuthenticationFilter
